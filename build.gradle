plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.+'
    id 'java'
}

group = 'com.SoloLevelingSystem'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

minecraft {
    mappings channel: 'official', version: '1.20.1'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                solo_leveling_system {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--nogui'

            mods {
                solo_leveling_system {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url = 'https://maven.minecraftforge.net/'
        name = 'Forge'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.3.0'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs = [
            '-Xlint:deprecation',
            '-Xlint:unchecked'
    ]
}

jar {
    manifest {
        attributes([
                'Specification-Title': 'solo_leveling_system',
                'Specification-Vendor': 'plonco',
                'Specification-Version': '1',
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Implementation-Vendor': 'plonco',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    finalizedBy 'reobfJar'
}

// Configuración básica de procesamiento de recursos
processResources {
    inputs.property 'version', version

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand 'version': version
    }
}